# ==== settings8.yml ====

# parameters for board and session
args:
 timeout: 0
 ip_address:
 board_id: 0 # required!
 serial_port: COM12 # Mac: /dev/cu.usbserial-DM00D7TW
 streamer_params:
 name: my_obci # required!
 data_type: # required!
  - EXG
  #- AUX
 channel_names:
  EXG: Fp1,Fp2,Fpz,F7,F8,O1,O2,Oz # ,9,10,11,12,13,14,15,16 # required if used!
  EEG: Fp1,Fp2,Fpz,F7,F8,O1,O2,Oz # ,9,10,11,12,13,14,15,16 # required if used!
  AUX: x,y,z # required if used
 uid: brainflow # required!
 daisy_attached: no # yes- Daisy is physically attached to Cyton; no- no Daisy
 max_time:
  7200 # required! Max 30 min.; if unlimited time needed, ->
  # use some huge number here e.g. 360000 (100h)
 delay: 0

# parameters for external marker stream
# arduino:
#     serial_port: COM4
#     baud: 19200         # must be the same as baud rate set for arduino
#     name: arduino
#     type: Markers       # do not change that
#     channel_count: 1
#     channel_format: int32
#     source_id: arduino_stream_666
#     delay: 0

# commands sent to board; if you use Daisy, uncomment channels 9-16
# example command:
# ** x (CHANNEL, POWER_DOWN, GAIN_SET, INPUT_TYPE_SET(ADC source), BIAS_SET, SRB2_SET, SRB1_SET) X **

# Channel Settings commands have six parameters for each ADS channel. To access Channel Settings, first send x. The OpenBCI board will then expect the next 7 bytes to be channel settings specific commands. The first byte is the channel number. (If you have the Daisy Module, you can select up to 16 channels to set). The following six ASCII characters are accepted as parameters to set. Lastly, sending X will latch the settings to the ADS channel.

# CHANNEL

# 1 2 3 4 5 6 7 8 for single board channel select
# Q W E R T Y U I for selecting channels on the Daisy Module
# POWER_DOWN

# 0 = ON (default)
# 1 = OFF
# GAIN_SET

# 0 = Gain 1
# 1 = Gain 2
# 2 = Gain 4
# 3 = Gain 6
# 4 = Gain 8
# 5 = Gain 12
# 6 = Gain 24 (default)
# INPUT_TYPE_SET
# Select the ADC channel input source

# 0 ADSINPUT_NORMAL (default)
# 1 ADSINPUT_SHORTED
# 2 ADSINPUT_BIAS_MEAS
# 3 ADSINPUT_MVDD
# 4 ADSINPUT_TEMP
# 5 ADSINPUT_TESTSIG
# 6 ADSINPUT_BIAS_DRP
# 7 ADSINPUT_BIAS_DRN
# BIAS_SET
# Select to include the channel input in BIAS generation.

# 0 = Remove form BIAS
# 1 = Include in BIAS (default)
# SRB2_SET
# Select to connect this channel's P input to the SRB2 pin. This closes a switch between P input and SRB2 for the given channel, and allows the P input also remain connected to the ADC.

# 0 = Disconnect this input from SRB2
# 1 = Connect this input to SRB2 (default)
# SRB1_SET
# Select to connect all channels' N inputs to SRB1. This effects all pins, and disconnects all N inputs from the ADC.

# 0 = Disconnect all N inputs from SRB1 (default)
# 1 = Connect all N inputs to SRB1
# EXAMPLE

# User sends x 3 0 2 0 0 0 0 X

# 'x' enters Channel Settings mode. Channel 3 is set up to be powered up, with gain of 2, normal input, removed from BIAS generation, removed from SRB2, removed from SRB1. The final 'X' latches the settings to the ADS1299 channel settings register.
commands:
 chan1: x1060110X # +
 chan2: x2060110X # +
 chan3: x3060110X # +
 chan4: x4060110X # +
 chan5: x5060110X # +
 chan6: x6060110X # +
 chan7: x7060110X # +
 chan8: x8161000X # -
 #chan9: xQ060110X   # -
 #chan10: xW060110X  # -
 #chan11: xE060110X  # -
 #chan12: xR060110X  # -
 #chan13: xT060110X  # -
 #chan14: xY060110X  # -
 #chan15: xU060110X  # -
 #chan16: xI060110X  # -
