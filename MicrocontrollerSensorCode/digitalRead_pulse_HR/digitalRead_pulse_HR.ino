#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/9f817909-9317-4b6f-82dd-02620591f54b 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  int hR_ear_clip;
  int pulseTrigger;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
const int sensorPin = 2; // Digital input pin for the heart rate sensor

// Variables for pulse timing and heart rate calculation
// unsigned long pulseTimes[21]; // To hold timestamps for 21 pulses (0–20)
// unsigned char pulseCount = 0; // Counter for pulses
// unsigned int heartRate = 0;   // Calculated BPM (beats per minute)

// const unsigned long maxInterval = 2000; // Maximum allowed interval between pulses (in ms)
// bool dataEffect = true;                 // Flag indicating whether the data is valid

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  Serial.println("Heart rate sensor test started...");

  pinMode(sensorPin, INPUT);

  // Initialize the pulseTimes array.
  // for (int i = 0; i < 20; i++)
  // {
  //     pulseTimes[i] = 0;
  // }
  // pulseTimes[20] = millis();

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  // Optionally wait until the device is connected.
  // while (ArduinoCloud.connected() != true) {
  //   Serial.println("Connecting to Arduino IoT Cloud...");
  //   delay(500);
  // }
  Serial.println("Connected to Arduino IoT Cloud");
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information you’ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  // --- Poll the sensor for a rising edge ---
  // We use a simple rising edge detector: when the sensor value transitions from LOW to HIGH.
  static bool previousState = LOW;
  bool currentState = digitalRead(sensorPin);

  if (!previousState && currentState) { // Rising edge detected
    // Update the cloud property by incrementing its value.
    // Each increment indicates that a new heartbeat was detected.
    pulseTrigger = pulseTrigger + 1;
    Serial.print("Heartbeat detected; pulseTrigger updated to: ");
    Serial.println(pulseTrigger);
  }
  previousState = currentState;

  delay(1);
}


