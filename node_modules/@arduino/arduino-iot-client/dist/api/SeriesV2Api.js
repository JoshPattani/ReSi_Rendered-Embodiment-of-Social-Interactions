"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _ArduinoSeriesBatch = _interopRequireDefault(require("../model/ArduinoSeriesBatch"));
var _ArduinoSeriesBatchSampled = _interopRequireDefault(require("../model/ArduinoSeriesBatchSampled"));
var _ArduinoSeriesRawBatch = _interopRequireDefault(require("../model/ArduinoSeriesRawBatch"));
var _ArduinoSeriesRawBatchLastvalue = _interopRequireDefault(require("../model/ArduinoSeriesRawBatchLastvalue"));
var _BatchLastValueRequestsMediaV = _interopRequireDefault(require("../model/BatchLastValueRequestsMediaV1"));
var _BatchQueryRawRequestsMediaV = _interopRequireDefault(require("../model/BatchQueryRawRequestsMediaV1"));
var _BatchQueryRequestsMediaV = _interopRequireDefault(require("../model/BatchQueryRequestsMediaV1"));
var _BatchQuerySampledRequestsMediaV = _interopRequireDefault(require("../model/BatchQuerySampledRequestsMediaV1"));
var _Error = _interopRequireDefault(require("../model/Error"));
var _HistoricDataRequest = _interopRequireDefault(require("../model/HistoricDataRequest"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Arduino IoT Cloud API
 * Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:  * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)  * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)  * [Golang Module](https://github.com/arduino/iot-client-go)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
* SeriesV2 service.
* @module api/SeriesV2Api
* @version 3.0.0
*/
var SeriesV2Api = exports["default"] = /*#__PURE__*/function () {
  /**
  * Constructs a new SeriesV2Api. 
  * @alias module:api/SeriesV2Api
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  function SeriesV2Api(apiClient) {
    _classCallCheck(this, SeriesV2Api);
    this.apiClient = apiClient || _ApiClient["default"].instance;
  }

  /**
   * batch_query series_v2
   * Returns the batch of time-series aggregated samples
   * @param {module:model/BatchQueryRequestsMediaV1} batchQueryRequestsMediaV1 
   * @param {Object} opts Optional parameters
   * @param {String} [xOrganization] Organization space identifer (optional)
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ArduinoSeriesBatch} and HTTP response
   */
  return _createClass(SeriesV2Api, [{
    key: "seriesV2BatchQueryWithHttpInfo",
    value: function seriesV2BatchQueryWithHttpInfo(batchQueryRequestsMediaV1, opts) {
      opts = opts || {};
      var postBody = batchQueryRequestsMediaV1;
      // verify the required parameter 'batchQueryRequestsMediaV1' is set
      if (batchQueryRequestsMediaV1 === undefined || batchQueryRequestsMediaV1 === null) {
        throw new _Error["default"]("Missing the required parameter 'batchQueryRequestsMediaV1' when calling seriesV2BatchQuery");
      }
      var pathParams = {};
      var queryParams = {};
      var headerParams = {
        'X-Organization': opts['xOrganization']
      };
      var formParams = {};
      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/vnd.arduino.series.batch+json', 'application/vnd.goa.error+json'];
      var returnType = _ArduinoSeriesBatch["default"];
      return this.apiClient.callApi('/iot/v2/series/batch_query', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * batch_query series_v2
     * Returns the batch of time-series aggregated samples
     * @param {module:model/BatchQueryRequestsMediaV1} batchQueryRequestsMediaV1 
     * @param {Object} opts Optional parameters
     * @param {String} opts.xOrganization Organization space identifer (optional)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ArduinoSeriesBatch}
     */
  }, {
    key: "seriesV2BatchQuery",
    value: function seriesV2BatchQuery(batchQueryRequestsMediaV1, opts) {
      return this.seriesV2BatchQueryWithHttpInfo(batchQueryRequestsMediaV1, opts).then(function (response_and_data) {
        return response_and_data.data;
      });
    }

    /**
     * batch_query_raw series_v2
     * Returns the batch of time-series raw samples
     * @param {module:model/BatchQueryRawRequestsMediaV1} batchQueryRawRequestsMediaV1 
     * @param {Object} opts Optional parameters
     * @param {String} [xOrganization] Organization space identifer (optional)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ArduinoSeriesRawBatch} and HTTP response
     */
  }, {
    key: "seriesV2BatchQueryRawWithHttpInfo",
    value: function seriesV2BatchQueryRawWithHttpInfo(batchQueryRawRequestsMediaV1, opts) {
      opts = opts || {};
      var postBody = batchQueryRawRequestsMediaV1;
      // verify the required parameter 'batchQueryRawRequestsMediaV1' is set
      if (batchQueryRawRequestsMediaV1 === undefined || batchQueryRawRequestsMediaV1 === null) {
        throw new _Error["default"]("Missing the required parameter 'batchQueryRawRequestsMediaV1' when calling seriesV2BatchQueryRaw");
      }
      var pathParams = {};
      var queryParams = {};
      var headerParams = {
        'X-Organization': opts['xOrganization']
      };
      var formParams = {};
      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/vnd.arduino.series.raw.batch+json', 'application/vnd.goa.error+json'];
      var returnType = _ArduinoSeriesRawBatch["default"];
      return this.apiClient.callApi('/iot/v2/series/batch_query_raw', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * batch_query_raw series_v2
     * Returns the batch of time-series raw samples
     * @param {module:model/BatchQueryRawRequestsMediaV1} batchQueryRawRequestsMediaV1 
     * @param {Object} opts Optional parameters
     * @param {String} opts.xOrganization Organization space identifer (optional)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ArduinoSeriesRawBatch}
     */
  }, {
    key: "seriesV2BatchQueryRaw",
    value: function seriesV2BatchQueryRaw(batchQueryRawRequestsMediaV1, opts) {
      return this.seriesV2BatchQueryRawWithHttpInfo(batchQueryRawRequestsMediaV1, opts).then(function (response_and_data) {
        return response_and_data.data;
      });
    }

    /**
     * batch_query_raw_last_value series_v2
     * Returns the batch of time-series data raw
     * @param {module:model/BatchLastValueRequestsMediaV1} batchLastValueRequestsMediaV1 
     * @param {Object} opts Optional parameters
     * @param {String} [xOrganization] Organization space identifer (optional)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ArduinoSeriesRawBatchLastvalue} and HTTP response
     */
  }, {
    key: "seriesV2BatchQueryRawLastValueWithHttpInfo",
    value: function seriesV2BatchQueryRawLastValueWithHttpInfo(batchLastValueRequestsMediaV1, opts) {
      opts = opts || {};
      var postBody = batchLastValueRequestsMediaV1;
      // verify the required parameter 'batchLastValueRequestsMediaV1' is set
      if (batchLastValueRequestsMediaV1 === undefined || batchLastValueRequestsMediaV1 === null) {
        throw new _Error["default"]("Missing the required parameter 'batchLastValueRequestsMediaV1' when calling seriesV2BatchQueryRawLastValue");
      }
      var pathParams = {};
      var queryParams = {};
      var headerParams = {
        'X-Organization': opts['xOrganization']
      };
      var formParams = {};
      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/vnd.arduino.series.raw.batch.lastvalue+json', 'application/vnd.goa.error+json'];
      var returnType = _ArduinoSeriesRawBatchLastvalue["default"];
      return this.apiClient.callApi('/iot/v2/series/batch_query_raw/lastvalue', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * batch_query_raw_last_value series_v2
     * Returns the batch of time-series data raw
     * @param {module:model/BatchLastValueRequestsMediaV1} batchLastValueRequestsMediaV1 
     * @param {Object} opts Optional parameters
     * @param {String} opts.xOrganization Organization space identifer (optional)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ArduinoSeriesRawBatchLastvalue}
     */
  }, {
    key: "seriesV2BatchQueryRawLastValue",
    value: function seriesV2BatchQueryRawLastValue(batchLastValueRequestsMediaV1, opts) {
      return this.seriesV2BatchQueryRawLastValueWithHttpInfo(batchLastValueRequestsMediaV1, opts).then(function (response_and_data) {
        return response_and_data.data;
      });
    }

    /**
     * batch_query_sampling series_v2
     * Returns a batch of time-series sampled samples. To be used for types that does not support mathematic aggregation. Types supported: strings, complex types.
     * @param {module:model/BatchQuerySampledRequestsMediaV1} batchQuerySampledRequestsMediaV1 
     * @param {Object} opts Optional parameters
     * @param {String} [xOrganization] Organization space identifer (optional)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ArduinoSeriesBatchSampled} and HTTP response
     */
  }, {
    key: "seriesV2BatchQuerySamplingWithHttpInfo",
    value: function seriesV2BatchQuerySamplingWithHttpInfo(batchQuerySampledRequestsMediaV1, opts) {
      opts = opts || {};
      var postBody = batchQuerySampledRequestsMediaV1;
      // verify the required parameter 'batchQuerySampledRequestsMediaV1' is set
      if (batchQuerySampledRequestsMediaV1 === undefined || batchQuerySampledRequestsMediaV1 === null) {
        throw new _Error["default"]("Missing the required parameter 'batchQuerySampledRequestsMediaV1' when calling seriesV2BatchQuerySampling");
      }
      var pathParams = {};
      var queryParams = {};
      var headerParams = {
        'X-Organization': opts['xOrganization']
      };
      var formParams = {};
      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/vnd.arduino.series.batch.sampled+json', 'application/vnd.goa.error+json'];
      var returnType = _ArduinoSeriesBatchSampled["default"];
      return this.apiClient.callApi('/iot/v2/series/batch_query_sampling', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * batch_query_sampling series_v2
     * Returns a batch of time-series sampled samples. To be used for types that does not support mathematic aggregation. Types supported: strings, complex types.
     * @param {module:model/BatchQuerySampledRequestsMediaV1} batchQuerySampledRequestsMediaV1 
     * @param {Object} opts Optional parameters
     * @param {String} opts.xOrganization Organization space identifer (optional)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ArduinoSeriesBatchSampled}
     */
  }, {
    key: "seriesV2BatchQuerySampling",
    value: function seriesV2BatchQuerySampling(batchQuerySampledRequestsMediaV1, opts) {
      return this.seriesV2BatchQuerySamplingWithHttpInfo(batchQuerySampledRequestsMediaV1, opts).then(function (response_and_data) {
        return response_and_data.data;
      });
    }

    /**
     * historic_data series_v2
     * Request sending of historical data of properties by email
     * @param {module:model/HistoricDataRequest} historicDataRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xOrganization] Organization space identifer (optional)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
  }, {
    key: "seriesV2HistoricDataWithHttpInfo",
    value: function seriesV2HistoricDataWithHttpInfo(historicDataRequest, opts) {
      opts = opts || {};
      var postBody = historicDataRequest;
      // verify the required parameter 'historicDataRequest' is set
      if (historicDataRequest === undefined || historicDataRequest === null) {
        throw new _Error["default"]("Missing the required parameter 'historicDataRequest' when calling seriesV2HistoricData");
      }
      var pathParams = {};
      var queryParams = {};
      var headerParams = {
        'X-Organization': opts['xOrganization']
      };
      var formParams = {};
      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/vnd.goa.error+json'];
      var returnType = null;
      return this.apiClient.callApi('/iot/v2/series/historic_data', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * historic_data series_v2
     * Request sending of historical data of properties by email
     * @param {module:model/HistoricDataRequest} historicDataRequest 
     * @param {Object} opts Optional parameters
     * @param {String} opts.xOrganization Organization space identifer (optional)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
  }, {
    key: "seriesV2HistoricData",
    value: function seriesV2HistoricData(historicDataRequest, opts) {
      return this.seriesV2HistoricDataWithHttpInfo(historicDataRequest, opts).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }]);
}();